package entities

import (
	"bytes"
	"encoding/hex"
	"encoding/json"
	"testing"

	"github.com/stretchr/testify/assert"
)

var (
	vtbProofPath = VbkMerklePath{
		0,
		13,
		parse32Bytes("2a014e88ed7ab65cdfaa85daeab07eea6cba5e147f736edd8d02c2f9ddf0dec6"),
		[][32]byte{
			parse32Bytes("5b977ea09a554ad56957f662284044e7d37450ddadf7db3647712f5969399787"),
			parse32Bytes("20d0a3d873eeeee6a222a75316dce60b53ca43eaea09d27f0ece897303a53ae9"),
			parse32Bytes("c06fe913dca5dc2736563b80834d69e6dfdf1b1e92383ea62791e410421b6c11"),
			parse32Bytes("049f68d350eeb8b3df630c8308b5c8c2ba4cd6210868395b084af84d19ff0e90"),
			parse32Bytes("0000000000000000000000000000000000000000000000000000000000000000"),
			parse32Bytes("36252dfc621de420fb083ad9d8767cba627eddeec64e421e9576cee21297dd0a"),
		},
	}
	vtbVbkBlock = VbkBlock{
		4976,
		2,
		parse12Bytes("449c60619294546ad825af03"),
		parse9Bytes("b0935637860679ddd5"),
		parse9Bytes("5ee4fd21082e18686e"),
		parse16Bytes("b53c1f4e259e6a0df23721a0b3b4b7ab"),
		1553699345,
		117576138,
		1099245043457,
	}
	defaultVtb        = Vtb{1, defaultVbkPopTx, vtbProofPath, vtbVbkBlock}
	defaultVtbEncoded = "0000000102046102011667ff0a897e5d512a0b6da2f41c479867fe6b3a4cae2641000013350002a793c872d6f6460e90bed62342bb968195f8c515d3eed7277a09efac4be99f95f0a15628b06ba3b44c0190b5c0495c9b8acd0701c523005ebbbe9c02011b01000000010ce74f1fb694a001eebb1d7d08ce6208033f5bf7263ebad2de07bbf518672732000000006a47304402200cf4998aba1682abeb777e762807a9dd2635a0b77773f66491b83ee3c87099ba022033b7ca24dc520915b8b0200cbdcf95ba6ae866354585af9c53ee86f27362ebec012103e5baf0709c395a82ef0bd63bc8847564ac201d69a8e6bf448d87aa53a1c431aaffffffff02b7270d00000000001976a9148b9ea8545059f3a922457afd14ddf3855d8b109988ac0000000000000000536a4c50000013350002a793c872d6f6460e90bed62342bb968195f8c515d3eed7277a09efac4be99f95f0a15628b06ba3b44c0190b5c0495c9b8acd0701c5235ebbbe9cd4e943efe1864df04216615cf92083f40000000002019f040000067b040000000c040000000400000020204d66077fdf24246ffd6b6979dfedef5d46588654addeb35edb11e993c131f61220023d1abe8758c6f917ec0c65674bbd43d66ee14dc667b3117dfc44690c6f5af120096ddba03ca952af133fb06307c24171e53bf50ab76f1edeabde5e99f78d4ead202f32cf1bee50349d56fc1943af84f2d2abda520f64dc4db37b2f3db20b0ecb572093e70120f1b539d0c1495b368061129f30d35f9e436f32d69967ae86031a275620f554378a116e2142f9f6315a38b19bd8a1b2e6dc31201f2d37a058f03c39c06c200824705685ceca003c95140434ee9d8bbbf4474b83fd4ecc2766137db9a44d7420b7b9e52f3ee8ce4fbb8be7d6cf66d33a20293f806c69385136662a74453fb162201732c9a35e80d4796babea76aace50b49f6079ea3e349f026b4491cfe720ad17202d9b57e92ab51fe28a587050fd82abb30abd699a5ce8b54e7cd49b2a827bcb9920dcba229acdc6b7f028ba756fd5abbfebd31b4227cd4137d728ec5ea56c457618202cf1439a6dbcc1a35e96574bddbf2c5db9174af5ad0d278fe92e06e4ac349a42500000c02000000000000000000014297d038cb54bfa964b44fb9a2d9853eb5936d4094f13a5e4a299b6c0cbdac21e997d74a999c26acd68c34bdfb527b10ddd779a1a0bceb3919b5c6c1f2c1773703bc0010350000080200000000000000000000d5efbd7dc73f09e8aaf064d1a76142d4bac4e9dcc61fc255eefbc6d8670ee98c583aeed677f27fc239c41f93ee411add001b1d40815a3268b9b5c6c1f2c17e11874af500000402000000000000000000013535112250e115e2896e4f602c353d839443080398e3f1dfb5f1e89109ef8508bde5404cf244a6372f402e0cf9d8dbd818326222ca739e08d9b5c6c1f2c1744290a9250000000200000000000000000002274473227b7674bd6a5b17dd3316a827f5a34402ea4ba2b36128b600bbb488ec6595eb2bb808425dea85fb83a63267b643406bed63aa310919b5c6c1f2c1749c4d1f0473045022100f4dce45edcc6bfc4a1f44ef04e47e90a348efd471f742f18b882ac77a8d0e89e0220617cf7c4a22211991687b17126c1bb007a3b2a25c550f75d66b857a8fd9d75e7583056301006072a8648ce3d020106052b8104000a03420004b3c10470c8e8e426f1937758d9fb5e97a1891176cb37d4c12d4af4107b1aa3e8a8a754c06a22760e44c60642fba883967c19740d5231336326f7962750c8df990400000000040000000d202a014e88ed7ab65cdfaa85daeab07eea6cba5e147f736edd8d02c2f9ddf0dec60400000006205b977ea09a554ad56957f662284044e7d37450ddadf7db3647712f59693997872020d0a3d873eeeee6a222a75316dce60b53ca43eaea09d27f0ece897303a53ae920c06fe913dca5dc2736563b80834d69e6dfdf1b1e92383ea62791e410421b6c1120049f68d350eeb8b3df630c8308b5c8c2ba4cd6210868395b084af84d19ff0e902000000000000000000000000000000000000000000000000000000000000000002036252dfc621de420fb083ad9d8767cba627eddeec64e421e9576cee21297dd0a41000013700002449c60619294546ad825af03b0935637860679ddd55ee4fd21082e18686eb53c1f4e259e6a0df23721a0b3b4b7ab5c9b9211070211cafff01c3f01"
)

func TestVtbDeserialize(t *testing.T) {
	assert := assert.New(t)

	vtbBytes := parseHex(defaultVtbEncoded)
	stream := bytes.NewReader(vtbBytes)
	decoded := Vtb{}
	assert.NoError(decoded.FromVbkEncoding(stream))

	address := addressFromString("VE6MJFzmGdYdrxC8o6UCovVv7BdhdX")
	assert.Equal(address, decoded.Transaction.Address)
}

func TestVtbSerialize(t *testing.T) {
	assert := assert.New(t)

	stream := new(bytes.Buffer)
	err := defaultVtb.ToVbkEncoding(stream)
	assert.NoError(err)
	assert.Equal(defaultVtbEncoded, hex.EncodeToString(stream.Bytes()))
}

func TestVtbRoundTrip(t *testing.T) {
	assert := assert.New(t)

	vtbBytes := parseHex(defaultVtbEncoded)
	stream := bytes.NewReader(vtbBytes)
	decoded := Vtb{}
	assert.NoError(decoded.FromVbkEncoding(stream))
	address := addressFromString("VE6MJFzmGdYdrxC8o6UCovVv7BdhdX")
	assert.Equal(address, decoded.Transaction.Address)

	outputStream := new(bytes.Buffer)
	assert.NoError(defaultVtb.ToVbkEncoding(outputStream))
	assert.Equal(defaultVtbEncoded, hex.EncodeToString(outputStream.Bytes()))
}

func TestVtbGetID(t *testing.T) {
	assert := assert.New(t)

	vtbBytes := parseHex(defaultVtbEncoded)
	stream := bytes.NewReader(vtbBytes)
	vtb := Vtb{}
	assert.NoError(vtb.FromVbkEncoding(stream))

	id := vtb.GetID()
	assert.Equal("32dd01ab6285a92318e374fcdbd6b023c1ae1268150ce3484961870b8beb71fc", hex.EncodeToString(id[:]))
}

func TestVtbToJSON(t *testing.T) {
	assert := assert.New(t)

	defaultJSON := `{"containingBlock":{"difficulty":117576138,"hash":"9314b8e3d4ae11db85f006720f04294253c9f603e3ab6512","height":4976,"id":"0f04294253c9f603e3ab6512","merkleRoot":"b53c1f4e259e6a0df23721a0b3b4b7ab","nonce":1099245043457,"previousBlock":"449c60619294546ad825af03","previousKeystone":"b0935637860679ddd5","secondPreviousKeystone":"5ee4fd21082e18686e","timestamp":1553699345,"version":2},"id":"32dd01ab6285a92318e374fcdbd6b023c1ae1268150ce3484961870b8beb71fc","merklePath":{"index":13,"layers":["5b977ea09a554ad56957f662284044e7d37450ddadf7db3647712f5969399787","20d0a3d873eeeee6a222a75316dce60b53ca43eaea09d27f0ece897303a53ae9","c06fe913dca5dc2736563b80834d69e6dfdf1b1e92383ea62791e410421b6c11","049f68d350eeb8b3df630c8308b5c8c2ba4cd6210868395b084af84d19ff0e90","0000000000000000000000000000000000000000000000000000000000000000","36252dfc621de420fb083ad9d8767cba627eddeec64e421e9576cee21297dd0a"],"subject":"2a014e88ed7ab65cdfaa85daeab07eea6cba5e147f736edd8d02c2f9ddf0dec6","treeIndex":0},"transaction":{"address":"VE6MJFzmGdYdrxC8o6UCovVv7BdhdX","bitcoinTransaction":"01000000010ce74f1fb694a001eebb1d7d08ce6208033f5bf7263ebad2de07bbf518672732000000006a47304402200cf4998aba1682abeb777e762807a9dd2635a0b77773f66491b83ee3c87099ba022033b7ca24dc520915b8b0200cbdcf95ba6ae866354585af9c53ee86f27362ebec012103e5baf0709c395a82ef0bd63bc8847564ac201d69a8e6bf448d87aa53a1c431aaffffffff02b7270d00000000001976a9148b9ea8545059f3a922457afd14ddf3855d8b109988ac0000000000000000536a4c50000013350002a793c872d6f6460e90bed62342bb968195f8c515d3eed7277a09efac4be99f95f0a15628b06ba3b44c0190b5c0495c9b8acd0701c5235ebbbe9cd4e943efe1864df04216615cf92083f400000000","blockOfProof":{"bits":388767596,"hash":"08432b58e00c66a96e1a69a063fb9d32b0f66239de7e1a78061f99cba88de7f8","merkleRoot":"ce0b1a9a77dd0db127b5df4bc368cd6ac299a9747d991ec2dacbc0b699a2e4a5","nonce":3225120883,"previousBlock":"134f09d43659eb53982d9afb444b96fa4bb58c037d2914000000000000000000","timestamp":1553699251,"version":549453824},"blockOfProofContext":[{"bits":388767596,"hash":"6170e8d73507ca1fddb4ef10d22f6d43360658c68d35b664a968d5788097d0ed","merkleRoot":"a31508d4b101d0ad11e43ef9419c23fc277f67edae83c598ee70866dbcef5e25","nonce":2943621345,"previousBlock":"fc61cc9d4eac4b2d14761a4d06af8a9ef073dcd7fb5e0d000000000000000000","timestamp":1553697574,"version":545259520},{"bits":388767596,"hash":"c11dcd341d3815fa39d30bc70734b2d4254ce48bb49a8fa2711409bfaa3e957a","merkleRoot":"39a72c22268381bd8d9dcfe002f472634a24cf0454de8b50f89e10891e5ffb1d","nonce":2450139460,"previousBlock":"3f8e3980304439d853c302f6e496285e110e2512515313000000000000000000","timestamp":1553698272,"version":541065216},{"bits":388767596,"hash":"a84f0e968c19379abb479787fc282f85bef51d6863b5ad421adca7770b894853","merkleRoot":"a33ad6be0634647b26633ab85fa8de258480bbb25e59c68e48bb0b608b12362b","nonce":4040279113,"previousBlock":"baa42e40345a7f826a31d37db1a5d64b67b72732477422000000000000000000","timestamp":1553699088,"version":536870912}],"hash":"0000000000000000000000000000000000000000000000000000000000000000","merklePath":{"index":1659,"layers":["4d66077fdf24246ffd6b6979dfedef5d46588654addeb35edb11e993c131f612","023d1abe8758c6f917ec0c65674bbd43d66ee14dc667b3117dfc44690c6f5af1","096ddba03ca952af133fb06307c24171e53bf50ab76f1edeabde5e99f78d4ead","2f32cf1bee50349d56fc1943af84f2d2abda520f64dc4db37b2f3db20b0ecb57","93e70120f1b539d0c1495b368061129f30d35f9e436f32d69967ae86031a2756","f554378a116e2142f9f6315a38b19bd8a1b2e6dc31201f2d37a058f03c39c06c","0824705685ceca003c95140434ee9d8bbbf4474b83fd4ecc2766137db9a44d74","b7b9e52f3ee8ce4fbb8be7d6cf66d33a20293f806c69385136662a74453fb162","1732c9a35e80d4796babea76aace50b49f6079ea3e349f026b4491cfe720ad17","2d9b57e92ab51fe28a587050fd82abb30abd699a5ce8b54e7cd49b2a827bcb99","dcba229acdc6b7f028ba756fd5abbfebd31b4227cd4137d728ec5ea56c457618","2cf1439a6dbcc1a35e96574bddbf2c5db9174af5ad0d278fe92e06e4ac349a42"],"subject":"94e097b110ba3adbb7b6c4c599d31d675de7be6e722407410c08ef352be585f1"},"networkByte":0,"publicKey":"3056301006072a8648ce3d020106052b8104000a03420004b3c10470c8e8e426f1937758d9fb5e97a1891176cb37d4c12d4af4107b1aa3e8a8a754c06a22760e44c60642fba883967c19740d5231336326f7962750c8df99","publishedBlock":{"difficulty":117556515,"hash":"e5fcf4d45317a7de93a03fb12e785abd956fadd2bff6336b","height":4917,"id":"2e785abd956fadd2bff6336b","merkleRoot":"9f95f0a15628b06ba3b44c0190b5c049","nonce":1589362332,"previousBlock":"a793c872d6f6460e90bed623","previousKeystone":"42bb968195f8c515d3","secondPreviousKeystone":"eed7277a09efac4be9","timestamp":1553697485,"version":2},"signature":"3045022100f4dce45edcc6bfc4a1f44ef04e47e90a348efd471f742f18b882ac77a8d0e89e0220617cf7c4a22211991687b17126c1bb007a3b2a25c550f75d66b857a8fd9d75e7","type":2},"version":1}`
	jsonmap, err := defaultVtb.ToJSON()
	assert.NoError(err)

	res, err := json.Marshal(jsonmap)
	assert.NoError(err)
	assert.Equal(defaultJSON, string(res))
}
