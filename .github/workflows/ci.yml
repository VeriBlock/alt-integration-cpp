name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  linux:
    runs-on: ubuntu-18.04
    container: veriblock/alt-integration-cpp-dev
    strategy:
      fail-fast: false
      matrix:
        flags: ["-DCLANG_TIDY=ON", "-DASAN=ON", "-DTSAN=ON"]
    env:
      CC: clang
      CXX: clang++
      CTEST_OUTPUT_ON_FAILURE: 1
    steps:
      - uses: actions/checkout@v1
        name: checkout
        with:
          submodules: true
          clean: true
      - name: cmake
        run: cmake . -Bbuild ${{ matrix.flags }}
      - name: build
        run: cmake --build build -- -j2
      - name: test
        run: cmake --build build --target test


  coverage:
    runs-on: ubuntu-18.04
    container: veriblock/alt-integration-cpp-dev
    env:
      CC: gcc
      CXX: g++
      CTEST_OUTPUT_ON_FAILURE: 1
    steps:
      - uses: actions/checkout@v1
        name: checkout
        with:
          submodules: true
          clean: true
      - name: cmake
        run: cmake . -Bbuild ${{ matrix.flags }} -DCOVERAGE=ON
      - name: build
        run: cmake --build build -- -j2
      - name: test
        run: cmake --build build --target ctest_coverage
      - name: collect coverage
        shell: bash
        run: bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}


  windows:
    runs-on: windows-latest
    env:
      CTEST_OUTPUT_ON_FAILURE: 1
    steps:
      - uses: actions/checkout@v1
        name: checkout
        with:
          submodules: true
          clean: true
          fetch-depth: 1

      - name: cmake
        run: cmake . -Bbuild -A x64
      - name: build
        run: cmake --build build --parallel 2
      - name: test
        run: cmake --build build --target RUN_TESTS
