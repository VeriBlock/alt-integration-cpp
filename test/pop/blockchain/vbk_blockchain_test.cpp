// Copyright (c) 2019-2020 Xenios SEZC
// https://www.veriblock.org
// Distributed under the MIT software license, see the accompanying
// file LICENSE or http://www.opensource.org/licenses/mit-license.php.

#include <gtest/gtest.h>

#include <memory>
#include <veriblock/pop/blockchain/blocktree.hpp>
#include <veriblock/pop/blockchain/pop/vbk_block_tree.hpp>
#include <veriblock/pop/literals.hpp>
#include <veriblock/pop/storage/inmem_payloads_provider.hpp>

#include "block_headers.hpp"

using namespace altintegration;

struct BtcInvalidationTest {
  using block_t = VbkBlock;
  using param_t = VbkChainParams;
  using index_t = typename BlockTree<block_t, param_t>::index_t;
  using height_t = typename BlockTree<block_t, param_t>::height_t;
  using hash_t = typename BlockTree<block_t, param_t>::hash_t;

  ValidationState state;

  BtcChainParamsRegTest btcparam;
  VbkChainParamsRegTest vbkparam;
  InmemPayloadsProvider storage;
  PayloadsIndex payloadsIndex;
};

struct VbkBlocksTest : public BtcInvalidationTest, public ::testing::Test {};

TEST_F(VbkBlocksTest, basic_test) {
  std::vector<VbkBlock> blocks;

  std::vector<std::string> hex_blocks = {
      "001571450002DC17D1D9F25F68F4BF21CDF9DDBABD593C5513A5BFB51A7106DA6BE0F5B6"
      "E2B4A340ACBA424435528917531CAE4B605EB533040AE824000421F0C8",
      "00157146000211F6E67E45AE4FF021589FD0DDBABD593C5513A5BFB51A7106DA6BE0F5B6"
      "EF48AAF32834B3F982128A9F8370BD49605EB53D040AE4E1000281AC0E",
      "001571470002BE6115861F377A57506D8EF3DDBABD593C5513A5BFB51A7106DA6BE0F5B6"
      "C23A850D093870F4CEFD51629B8DE1E6605EB558040B0B1A00051E4DAC",
      "0015714800022E219EBDC38578031CE64483DDBABD593C5513A5BFB51A7106DA6BE0F5B6"
      "1DFF9B041C7BFF2FF9801280C487F4E9605EB565040B11270007269B9A",
      "00157149000289224E307E5078187BB4A551DDBABD593C5513A5BFB51A7106DA6BE0F5B6"
      "F82FD917C566C6B302D17111AE72849D605EB58C040B314300051213B4",
      "0015714A00027098B83105CE3EC64142C3C5DDBABD593C5513A5BFB51A7106DA6BE0F5B6"
      "9E5B695D90B84C29E2A14BCDBAF40909605EB5AF040B1FAF00075E910A",
      "0015714B0002A086D4226F2E89FC9A26B928DDBABD593C5513A5BFB51A7106DA6BE0F5B6"
      "045725EE79BD06A777D2005F56946F87605EB5C3040B16B500035FF311",
      "0015714C00027E41DF3E4F4C6BA0784AAFA7DDBABD593C5513A5BFB51A7106DA6BE0F5B6"
      "C90C38F9746BA9AA35AEB7FFD596C294605EB5CB040B2B440002141988",
      "0015714D0002C87FB8E4FA0C53C7E98006F7DDBABD593C5513A5BFB51A7106DA6BE0F5B6"
      "6678F3CC2EC874CB63F3E042570B414E605EB608040B57560008A01D26",
      "0015714E00021F41534032BD3C13F289DDF8E4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "997B4067CC4A1A3FD221830D71F9C3E9605EB61C040B19030000103042",
      "0015714F0002B7393A38B5E34DF67BB457E5E4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "7C29249B6A6111CC1E2A8D3A09E99953605EB631040B2D0A0006F7E2D9",
      "0015715000020F6EB77CCE538D49A43284B7E4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "2AEC171FBABE35F5C35204F6F1DECB24605EB642040B3FC80001D0971F",
      "001571510002173BE43F63449EF3CAF86A86E4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "089822409EB31AB9C145BA91BE0808D6605EB65E040B5AA20000985B12",
      "0015715200027C9211FC66404BEF9A42BBD2E4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "3BDEAB0DA8D8A313BFCF9F2E3E5BCBB1605EB65F040B5EF500061305A6",
      "00157153000235CFE6F2B091D01F6BB35F16E4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "F93AD00B29014B56108D0568402C6955605EB66E040B9B1F00019C98B6",
      "00157154000281E284365895E2E6C0D6F7DDE4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "0C300F710BEA8820D20F65E4F24987BA605EB679040BBBE9000627A5F3",
      "00157155000210BE2973FD4AD34CE25F44CCE4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "D7608786C78CDAE4869D4AA9A15E1CE0605EB69C040BE5900002A8A261",
      "00157156000290780F148903B2225CB9ACCEE4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "80C130E1CCFF34B7F12CD1191316CB78605EB6FB040BDB1100077BE199",
      "001571570002870AA5D81C9770EC70709D37E4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "17FB9FF2EAE6FDEE06813CF06C8FE9C7605EB70F040B51930007EF751B",
      "001571580002B51082786B3F3011D49DA0D2E4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "45F804BA2A28EF65E8957711BE115B88605EB725040B678B0000EDBCF4",
      "001571590002A92986BD31A2FCBE14A2B3BDE4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "7A1F258D76AE22A918452000F9FAD1FA605EB727040B782B00047B5C82",
      "0015715A0002D9AD27DFCE74D84191D6EFA7E4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "E0D4CE9E2FFD638F1E747A092459013A605EB733040BB43600064459A5",
      "0015715B000280DFAB6F528998C5B27D56BFE4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "4BDDAC01EB6E6DE0CACD94189FAE1D14605EB75B040BDBCE000661EBD3",
      "0015715C000242E9C864B91470470F563C3FE4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "3F6A13D5FAF9290875968BAA0D7D4AFB605EB7A2040BC3B4000780CCA2",
      "0015715D0002FCB87BBFD9AFFAEB240BC777E4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "70B63157CBE28AA8F1D3FD59B58816D4605EB7ED040B6C280001C65E10",
      "0015715E000285456BED431BA6EA550090A9E4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "18C4A5290D78772CB3917522E78D5B37605EB809040B11C30000B6812C",
      "0015715F00026A9DF19645CE1070CA17CCEBE4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "882FD183F3715CC2F00666E9B96BB1C6605EB821040B165C00030EB793",
      "001571600002C3E0FCC048F87E8C32A6EA33E4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "C3EF427A6F57017025989C3A0FEC148B605EB82A040B21490001D1A512",
      "0015716100023614DAAF476F4A42482D70A5E4FA0C53C7E98006F7DDBABD593C5513A5BF"
      "F90CF848DD9460EFD05D013CFDA0B089605EB82F040B4A930002D35BA4",
      "001571620002C2C0233E0D348A2F706EF813AF476F4A42482D70A5E4FA0C53C7E98006F7"
      "843690A2AC894165E6B65CE0001160BE605EB84C040B7CF20001E9C724",
      "00157163000285D667EEA3CD42F9947D829EAF476F4A42482D70A5E4FA0C53C7E98006F7"
      "96CAB45EDDB7AE93F766B8812D3FB3BE605EB851040B7EA3000107DF34",
      "001571640002082D6176D04BA15AF5922F96AF476F4A42482D70A5E4FA0C53C7E98006F7"
      "2D7530D81422132AD95EC5342DCEC278605EB854040BB2470002C73ABE",
      "001571650002D942BF5033103AC87F683919AF476F4A42482D70A5E4FA0C53C7E98006F7"
      "EBBDCCCBC30A13D5AEC7075255C2BF7C605EB85B040BECB30002320FA4",
      "001571660002D65D0E5D7A533E673447F324AF476F4A42482D70A5E4FA0C53C7E98006F7"
      "BADAD2D2A11FE495F7197F292B481986605EB861040C1FCA00028F10E5",
      "0015716700027B29FECCF8D1FD924A1E70B6AF476F4A42482D70A5E4FA0C53C7E98006F7"
      "02A5C28FEEE137B555FEC192A32CE0E5605EB86F040C5750000058EF3D",
      "001571680002018525A212E8131906590D33AF476F4A42482D70A5E4FA0C53C7E98006F7"
      "ECAECE6F21EF75954335FF3C8988E47D605EB879040C7D0600026D2F03",
      "001571690002212D4C17838C6AD13E0FCB9DAF476F4A42482D70A5E4FA0C53C7E98006F7"
      "2C7149590BA0E421E0DF650E07F56DB0605EB896040CAE4C0001C90A16",
      "0015716A00024EC8312387A6D2DFD63E1EC5AF476F4A42482D70A5E4FA0C53C7E98006F7"
      "5DFC5F76F50740E215C67E0991A7041C605EB8B0040CB0B1000191435F",
      "0015716B0002487C96E92D401EE11738BF71AF476F4A42482D70A5E4FA0C53C7E98006F7"
      "E8A056225182A3D59D5FFFFFF3D81B6A605EB8B5040CBA2B000578E25F",
      "0015716C000204A9C6AA9050F1661BD388D6AF476F4A42482D70A5E4FA0C53C7E98006F7"
      "2F7F7EEE5980B2D286BEA73BB0A3FFE3605EB8C2040CF94600012FBE09",
      "0015716D0002A0B43A4E8B4CFD8B52427150AF476F4A42482D70A5E4FA0C53C7E98006F7"
      "EFAC133207F7BDE3972AEB579210208A605EB8CD040D2301000B8F1F77",
      "0015716E0002D7C1CCD223AEAEEB3773F508AF476F4A42482D70A5E4FA0C53C7E98006F7"
      "A4E4AC7D23FF9A0A1C230A0B47DFE0EA605EB921040D55280006FDE49D",
      "0015716F00025430F5BA2311AE3644512CB6AF476F4A42482D70A5E4FA0C53C7E98006F7"
      "8673F25416255148579C11348B4B1568605EB933040CC6F60001198E90",
      "00157170000223AF5067A72ECAE070015FF0AF476F4A42482D70A5E4FA0C53C7E98006F7"
      "D700C221DABA70E46C95A8BB118E16B5605EB975040CE6640007BCB9A3",
      "001571710002AFE48123342F2232DF7DD92EAF476F4A42482D70A5E4FA0C53C7E98006F7"
      "0238E8375CC4D3746BF8BF411C69BA50605EB989040C8CF600002E2C4B",
      "00157172000220B886F6EBFAA2764A6C8785AF476F4A42482D70A5E4FA0C53C7E98006F7"
      "74CB4D831481BCB4847D6AA8A7EBE3E6605EB98B040CA6770005AFAC82",
      "00157173000244F50804B67536D06AE036FEAF476F4A42482D70A5E4FA0C53C7E98006F7"
      "DCFDE02F4DE37E19268283B88FA74110605EB99A040CEC5000029E358D",
      "001571740002D069C57E420986B65C17EB56AF476F4A42482D70A5E4FA0C53C7E98006F7"
      "ECBF0D4727D7F122BDEE7A98AFAFE899605EB9B5040D129B000201E9F3",
      "001571750002CB7F13D9597C052D05AE24FFAF476F4A42482D70A5E4FA0C53C7E98006F7"
      "673BA431BF14898AEF8272C2A582FE12605EB9BB040D19EA00024DA524",
      "00157176000232113C54D837BB6A1EE780E5D9597C052D05AE24FFAF476F4A42482D70A5"
      "89BE1092F3FE3713B918B7184ACB694D605EB9C1040D59E70000590738",
      "001571770002C8103F59DCFF9953C6C9A921D9597C052D05AE24FFAF476F4A42482D70A5"
      "3453FF4903C039C37892FA85A0808553605EB9FA040D9BD100035D2C39",
      "0015717800023169627D02A36AB885962BB0D9597C052D05AE24FFAF476F4A42482D70A5"
      "61F0D10F27B6B25EA21C454C6B595182605EBA3B040D52380001EE1E8F",
      "0015717900024C5685017B387C1E16C68317D9597C052D05AE24FFAF476F4A42482D70A5"
      "F7B101F280838FBB56680F589D1EBE81605EBA56040CF895000667260A",
      "0015717A000290ADF3C4280C28C390C5BA8CD9597C052D05AE24FFAF476F4A42482D70A5"
      "4E336C6E809EBB78C11C19E9CB19D8DA605EBA7C040D01D70003322C37",
      "0015717B000238109F1ABB000208FE072A43D9597C052D05AE24FFAF476F4A42482D70A5"
      "F4802F61C7CF0B3AE625D0C4C33F305A605EBA84040CED7700000D20A0",
      "0015717C00021DE24C56CEFC3FAA5554E66ED9597C052D05AE24FFAF476F4A42482D70A5"
      "84B886E993E21494D41A65579C4E13DA605EBABC040D26CA00037ABEB4",
      "0015717D000239DD5A01CB486B612D8CACAFD9597C052D05AE24FFAF476F4A42482D70A5"
      "4010A82532D44A740441933616CDB7A7605EBAC5040CE53B000422A854",
      "0015717E00028A309904401F279E82F1BDECD9597C052D05AE24FFAF476F4A42482D70A5"
      "DFCEFCB5B2142036D402CC2026B662C9605EBAD0040D1A000004430345",
      "0015717F00028B556D807F5B315CDD9DC5ECD9597C052D05AE24FFAF476F4A42482D70A5"
      "6EE8A1A3B88C8E16C695AF36652005C9605EBAF0040D4B7E00016A9078",
      "001571800002E7CB4485E5A2875ECD291F65D9597C052D05AE24FFAF476F4A42482D70A5"
      "654DEF3D9EBCEE0EC8007556B07A378E605EBB09040D46040004919A45",
      "001571810002EF88D032A6061F44A2AFC3B6D9597C052D05AE24FFAF476F4A42482D70A5"
      "9E24A3BB9591AF4BF23E062CD48B8CE9605EBB6D040D541A0006E48DEB",
      "001571820002804B9F00153594B46E1254A1D9597C052D05AE24FFAF476F4A42482D70A5"
      "A06EAB77674708C385D19E3AF1CE66D4605EBB80040CA56A000A8C562B",
      "0015718300024CEF8A93A802A4B641B59893D9597C052D05AE24FFAF476F4A42482D70A5"
      "C91947ADCB67975133DF0327DACA679D605EBBAF040CC25D0005A49BA8",
      "001571840002C4FC6B0E2102C86290A8E2F0D9597C052D05AE24FFAF476F4A42482D70A5"
      "40B9DD64E727DCA257E2C10C057D2248605EBBBF040C98A9000740E73F",
      "00157185000258175DB063E46FB15079D5DFD9597C052D05AE24FFAF476F4A42482D70A5"
      "C56881C4E16ECC96CC5F522341BE0647605EBC0A040CB6F5000B60344B",
      "001571860002D01D30028A1733569AD102FED9597C052D05AE24FFAF476F4A42482D70A5"
      "77910416BB09485E590F83CBD584DB66605EBC5D040C4DDF0008E4F097",
      "0015718700029D9A1BABF8ED44864D240DD8D9597C052D05AE24FFAF476F4A42482D70A5"
      "F7CB11EDBFEC25ADB12449D7E0C672AF605EBCAB040BDCD40001C51B8D",
      "001571880002F9739746395112EBD1F7AF2CD9597C052D05AE24FFAF476F4A42482D70A5"
      "487C9B6E83CCB4C17B47CA936A12F3EA605EBD09040B7D4B000695959E",
      "0015718900020858C82196C6B30A3A5CD3E0D9597C052D05AE24FFAF476F4A42482D70A5"
      "E88AC9FB916DD546480752D036D58A22605EBD30040B075F000179AD17",
      "0015718A0002F7AD860A3921094B3BA93A062196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "89200FFEBC9689D7A01FC3F1AD9F9364605EBD34040AF8BB000116DD5C",
      "0015718B000216A4D179E95E743D06099CD92196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "EA432EC57C96B3BFB1D5556CB64FD7AC605EBD4D040B27C60002718D72",
      "0015718C0002AD82E749FF5B7C2D598166B22196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "2C7086E0CE592398157827C5378CC2D6605EBD53040B30BE0005CC08B1",
      "0015718D0002E82771DD22C887C79A7A95132196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "1715976A8E96BC0F07EEEC02DE0AB0C7605EBD62040B5DC30009641386",
      "0015718E0002171CC478EE47D20CF66E1D702196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "0FA85957D0CF7139E2901C4EC10A260E605EBD8F040B7959000583DF24",
      "0015718F0002E0EB09DBE34ADD3C0A4240DF2196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "D89281F9F7D37DA3D2B61278E92E5614605EBDB4040B5CBB00071699DA",
      "001571900002EB874BF01D7BBA0BE37E0A612196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "72049C7A0F446E00A8D5AB3026CF67B4605EBDC6040B4F96000639EF1C",
      "00157191000265974F09B5F7D2356A64A8AF2196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "B7A0752C2FEDEC33F96AA31C8CAD7F1B605EBE0D040B666400036AD7EF",
      "001571920002D7275B05D85F2BE8F0BE53AB2196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "09667FB6948B41A4E5622C2EB4DF4249605EBE2C040B1A870002CD53A9",
      "001571930002CFFA7C28339E44651038AF072196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "28288377D96F93F16D1E433640F31B1F605EBE49040B199100018389AD",
      "001571940002DF86A18C36CA2E0D530EC5AF2196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "62541CEEDC642B0006803712F9708767605EBE4D040B1BE40003949BFC",
      "001571950002F66FDFC4CC007C36A03D13FD2196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "A7E69A0C1DA0860D8388DE309664F321605EBE56040B4B14000A111452",
      "001571960002EB7352C509ED849625DC31C72196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "60D65ED02E4BA1AAA84150E849C68BD5605EBE86040B7207000455F038",
      "0015719700028403ACEFEC373AFCE2A44D3C2196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "A6184BCF733CAE46C724E2A454701C95605EBEA4040B50370003A5E0F9",
      "001571980002DA39794267DC4B70E18788262196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "2BF811774DE9C38E3034C96F9F0166B5605EBEC2040B506E0008D8A3FF",
      "0015719900024603629703D38E116DB424B92196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "2726ED897EC9555221D478FAD937623B605EBEED040B5085000CAD1DA5",
      "0015719A0002BA992F3EB8DA2DE11E70C1E42196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "DBFC39410B18604EA2F161AF1ED706B5605EBF20040B394500012A3D3B",
      "0015719B0002D8B5B2F49EB5B3688138F7E32196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "BFB229B6C77A2E4F1D152DDD77E94FDE605EBF39040B148700096434CF",
      "0015719C0002A7BB07E319AB77AA527C024F2196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "428585E80B87548DC43DE6087991810A605EBF4F040B1E4F0007ADBF27",
      "0015719D0002DD6F50FC2CF7C15A0A68B4B32196C6B30A3A5CD3E0D9597C052D05AE24FF"
      "FE2F12247433EAE8234050F575532F57605EBF63040B2D5B0001285EFB",
      "0015719E0002761A9197AE48B20F0F8B3F9EFC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "781F29F83627BCD95897E4322D2C622C605EBF68040B400600084FE50F",
      "0015719F00021BF6E911998C7BC5B2E26F7CFC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "05AA4423846797D65D7BCAD130224811605EBFF7040B6D95000673423F",
      "001571A00002190EC3E82D36CAA8E2030A8CFC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "E38B2FE83BCA9E6497A3B5FC6A5E044F605EC01D040AA7860001639658",
      "001571A10002903C7BD3B908928DDCD316E2FC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "5283234969FD5A12BDC3971A90101084605EC021040A9D10000BAF00DD",
      "001571A2000244BA070CEB3DA47CC1136A3CFC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "4AEA6B9E0927B9C7EE1D5A73A5F69DBB605EC056040AC8D800098A8421",
      "001571A30002E2732E1CC59D96C1456345A6FC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "4CC37B65FE6DF8A5D9C9646D5AFE4F35605EC084040AA30C000078804C",
      "001571A40002A6D6711F5F6CB0475A33F82CFC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "02A810B527B76DC42FED4C85FB49C2AC605EC085040A8A540006A7D1F2",
      "001571A500026C0FBB992A8BACCBFEA800BAFC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "E2FA437ABB0A61F143A16E1488B1E718605EC0CF040ABA72000323643C",
      "001571A6000288D7A0ABFB20F839CCD52545FC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "BF8687311D29CF8976145011BA00551C605EC110040A732B00020C66F5",
      "001571A70002CB5A1B7657A672CC87AD1F86FC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "8AC340D09E985A498C6876D2EC82CCA6605EC12B040A3E4D0008261E34",
      "001571A800025AD020FBBBBD8A29C7FF2CE2FC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "734A7B8C481D997C3C631B0FC30B42E1605EC13F040A41A800077D64F8",
      "001571A9000200678627C00C4E8F41D5275FFC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "9E383CE767F55CCEF9DF901FA8C8DF65605EC151040A515A000071F881",
      "001571AA0002D8E6EFEE4438A2082822D4D0FC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "D052E5FAED1CAEC78C4A42BD0525519A605EC152040A64490003D06E12",
      "001571AB0002B00DA23EC5A1759876FF4E76FC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "6613ABDD2AF572A4FEF571519CAC93C6605EC15C040A93130001716810",
      "001571AC0002F100BC908C3A403978700D9AFC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "6E276F89AA55FCD0C16078B37F343410605EC160040AB3F20001B0E87C",
      "001571AD0002B545A25DD304EDF7BD2C715AFC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "8CD7FB96D5A87BFBB2406FE97CFDBAE7605EC16D040AE03D000ACEE3B6",
      "001571AE0002C69838727BC640C653F042CBFC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "BC3229107EC36510D458EAD53404C4F3605EC19B040AFD8D00056212AA",
      "001571AF0002AC2789B02355A7DA930CE8F2FC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "8ABDDA26C090C83AAD62E16B7AFC4B8F605EC1BF040AE1D30001BFA643",
      "001571B0000271A78346F2AFDA53E71B5B11FC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "292B1DCDC01EAF419F444ED072DD9A45605EC1C3040AD863000D7C8316",
      "001571B100023071C52062B503F19BF40723FC2CF7C15A0A68B4B32196C6B30A3A5CD3E0"
      "D7ABC4B2D01E11AF2EB9EBAA8057EDD1605EC21C040B0664000732A212",
      "001571B200024DFBC2770D70E876740B69F02062B503F19BF40723FC2CF7C15A0A68B4B3"
      "4A784163AA2AA4E503F412FE4B6B8CAA605EC263040AA164000756B406",
      "001571B30002F70C7FB3CD156832257FF5AB2062B503F19BF40723FC2CF7C15A0A68B4B3"
      "64394470425C21021CB5AC208BA69CA6605EC275040A612D00021DEC64",
      "001571B40002F671D700177734B719E4EE462062B503F19BF40723FC2CF7C15A0A68B4B3"
      "689CAD553FFF650248750A709BD9690D605EC27E040A75450000C310A0",
      "001571B5000233AE57D5EF7F48309B99F27A2062B503F19BF40723FC2CF7C15A0A68B4B3"
      "BA26D8E2C3FB69B9C923963A57D8230A605EC280040A978D000223B67B",
      "001571B60002EE0E813F6E10614A3CF3EE562062B503F19BF40723FC2CF7C15A0A68B4B3"
      "7C541F8EA6A7F8B68EAF4DF34C4EEB25605EC285040AC62A00003515D1",
      "001571B7000296C917C1986EC4D218D9FEBF2062B503F19BF40723FC2CF7C15A0A68B4B3"
      "A75319440CDA4927A9FF6ED412C97C3E605EC28C040AF18B000C7E8430",
      "001571B8000292B8D5BE287C1415316552112062B503F19BF40723FC2CF7C15A0A68B4B3"
      "02E89F42CDEF2F2C6BA118326D92D4FA605EC2C0040B1A77000098B992",
      "001571B900026682AC879F7B0347F5C8CBB22062B503F19BF40723FC2CF7C15A0A68B4B3"
      "79E6DEB3384242E112D1E7106E01754A605EC2D7040AF3B60003D1FFEB",
      "001571BA0002121D7EB2C5A84ED90ACC26D22062B503F19BF40723FC2CF7C15A0A68B4B3"
      "F777FB2C68D431C360273EC1EE634D24605EC2F6040B008A000117563A",
      "001571BB00023BE71225B07555AF9CB341CE2062B503F19BF40723FC2CF7C15A0A68B4B3"
      "6CFFC980632C3F3F7A5DD1702665DAC3605EC30F040AFDC0000B270C28",
      "001571BC00024E754DA4C27D32AE01D85A752062B503F19BF40723FC2CF7C15A0A68B4B3"
      "17637CCFEAB239C950BE95E376529536605EC33F040B07350007B9B31E",
      "001571BD0002FDA682CC33BFF7026259818A2062B503F19BF40723FC2CF7C15A0A68B4B3"
      "EAC5BC308EAB8A8402FF14C25C1931F8605EC38A040AE7FF0007B6AF51",
      "001571BE0002B8512404039DE5373EB43D442062B503F19BF40723FC2CF7C15A0A68B4B3"
      "1124287CF2F8B5A43D61ADFE6C5AEB6C605EC39D040A9CFA00008408B1",
      "001571BF0002F485FF584145BB8591EA4C592062B503F19BF40723FC2CF7C15A0A68B4B3"
      "62842BA8C45278F19788C69598190D23605EC39F040AB0820000F939E7",
      "001571C0000231D1FA64F023366031950E662062B503F19BF40723FC2CF7C15A0A68B4B3"
      "009E586097FB03E90379F380C55C43F3605EC3A2040AE00E0001584422",
      "001571C10002E8E9A07AE8D704FB85F2D3BB2062B503F19BF40723FC2CF7C15A0A68B4B3"
      "46A7B62BCD741400426FFB5CEA2BB7C6605EC3A5040B0EC40000BA0835",
      "001571C200027D36188C69AD4FB9FE7408042062B503F19BF40723FC2CF7C15A0A68B4B3"
      "94798089B6C1C5C38F7EB9C059537DBC605EC3BD040B3F220000468719",
      "001571C30002B1D8B2534F6A5922A8BA22962062B503F19BF40723FC2CF7C15A0A68B4B3"
      "2185E2FA107B13B8F613BC000C25C6A0605EC3BE040B4A500004702D3A",
      "001571C4000202AC68C71E5A8A3B1D5D8A682062B503F19BF40723FC2CF7C15A0A68B4B3"
      "EE07DE6BA00E4B997F9E203354A8B381605EC3C9040B8201000284E289",
      "001571C500026761734AEDA24536EA8316782062B503F19BF40723FC2CF7C15A0A68B4B3"
      "D34BA3C071859095B132ADD36E75E8D6605EC3D0040BA7A80002365BDD",
      "001571C6000276927A414A474AC4098992284AEDA24536EA8316782062B503F19BF40723"
      "40B82DB946F43A262DCF298D27E57066605EC3D9040BD6BE0000B42E34",
      "001571C70002F26309920CF422149E24C9614AEDA24536EA8316782062B503F19BF40723"
      "43389FFE105D6BCC222B92ACBE729178605EC434040C027A00071CF398",
      "001571C8000223DD21A1ACDD7A8FEACF977B4AEDA24536EA8316782062B503F19BF40723"
      "1FE3101229DDB5B9662CBF03F007AAE5605EC447040B874200059E4F54",
      "001571C9000255EF568B55549CF44DB1AAFD4AEDA24536EA8316782062B503F19BF40723"
      "5ABF4D93F82520BDE6959196C5474C76605EC458040B9F0A0003BDBBF5",
      "001571CA0002199A496E6B339DA0E88736814AEDA24536EA8316782062B503F19BF40723"
      "DBED57E836884491564CFE17B81C8CFD605EC467040BB99D0002D290B2",
      "001571CB000250F984E0E3D5D264D72562174AEDA24536EA8316782062B503F19BF40723"
      "37863CF770C954B2681963A646E9B183605EC486040BD8BF0008025137",

  };

  for (size_t i = 0; i < hex_blocks.size(); ++i) {
    VbkBlock blk;
    ASSERT_TRUE(DeserializeFromRawHex(hex_blocks[i], blk, state))
        << state.toString();

    ASSERT_EQ(blk.getHeight(), 1405253 + i);
    blocks.push_back(blk);
  }

  auto bootstrap_chain = blocks;
  bootstrap_chain.resize(130);

  VbkChainParamsTest vbktestparam;

  VbkBlockTree tree(vbktestparam, btcparam, storage, payloadsIndex);

  ASSERT_EQ(bootstrap_chain.size(), 130);

  ASSERT_TRUE(tree.bootstrapWithChain(1405253, bootstrap_chain, state))
      << state.toString();

  for (size_t i = 130; i < blocks.size(); ++i) {
    ASSERT_TRUE(tree.acceptBlockHeader(blocks[i], state))
        << "block height: " << blocks[i].getHeight() << " " << state.toString();
  }
}

struct VbkTestCase {
  std::string headers;
  std::shared_ptr<VbkChainParams> params;
  uint32_t startHeight = 0;
  uint32_t offset = 0;

  std::vector<VbkBlock> getBlocks() const {
    std::vector<VbkBlock> ret;
    std::string data;
    std::istringstream file(headers);
    EXPECT_TRUE(!file.fail());
    while (file >> data) {
      auto v = ParseHex(data);
      if (v.empty()) {
        continue;
      }
      ret.push_back(AssertDeserializeFromRaw<VbkBlock>(v));
    }
    return ret;
  }
};

struct AcceptTest : public testing::TestWithParam<VbkTestCase>,
                    public BtcInvalidationTest {};

static std::vector<VbkTestCase> accept_test_cases = {
    /// mainnet
    {generated::vbk_blockheaders_mainnet_200001_230000,
     std::make_shared<VbkChainParamsMain>(),
     200001,
     0},
    {generated::vbk_blockheaders_mainnet_200001_230000,
     std::make_shared<VbkChainParamsMain>(),
     200001,
     3333},

    /// testnet
    {generated::vbk_blockheaders_testnet_0_10000,
     std::make_shared<VbkChainParamsTest>(),
     0,
     0},
    {generated::vbk_blockheaders_testnet_0_10000,
     std::make_shared<VbkChainParamsTest>(),
     0,
     3333},
};

// Read Vbk_blockheaders file.
// TODO(warchant): disabled because vbk_blockheader* contain pre-progpow data
TEST_P(AcceptTest, DISABLED_BootstrapWithChain) {
  auto value = GetParam();
  auto allblocks = value.getBlocks();

  // skip first `offset` blocks
  allblocks =
      std::vector<VbkBlock>{allblocks.begin() + value.offset, allblocks.end()};

  // make a bootstrap chain by taking first `numBlocksForBootstrap` x2 blocks
  // due to forked blocks we take twice the blocks and expect to collect
  // at least `numBlocksForBootstrap` blocks
  auto bootstrapChain = allblocks;
  bootstrapChain.resize(value.params->numBlocksForBootstrap() * 2);

  ASSERT_GE(allblocks.size(), value.params->numBlocksForBootstrap() * 2);
  // make accept chain - the one that is applied on top of current blocktree
  // state
  std::vector<VbkBlock> acceptChain{
      allblocks.begin() + value.params->numBlocksForBootstrap() * 2,
      allblocks.end()};

  VbkBlockTree tree(*value.params, btcparam, storage, payloadsIndex);

  ASSERT_TRUE(tree.bootstrapWithChain(
      bootstrapChain[0].getHeight(), bootstrapChain, state))
      << state.GetPath();
  EXPECT_TRUE(state.IsValid());
  size_t totalBlocks = bootstrapChain.size();

  ASSERT_TRUE(tree.getBestChain().tip());
  EXPECT_EQ(tree.getBestChain().tip()->getHeader(),
            bootstrapChain[bootstrapChain.size() - 1]);
  EXPECT_EQ(tree.getBestChain().tip()->getHeight(),
            bootstrapChain[bootstrapChain.size() - 1].getHeight());

  for (const auto& block : acceptChain) {
    ASSERT_TRUE(tree.acceptBlockHeader(block, state))
        << "block #" << totalBlocks << "\n"
        << "stack trace: " << state.GetPath() << ", "
        << "message: " << state.GetDebugMessage();
    EXPECT_TRUE(state.IsValid());

    // we are not sure that block gets to the main chain. Make sure it at least
    // exists
    if (tree.getBestChain().tip()->getHeader() != block) {
      EXPECT_NE(tree.getBlockIndex(block.getHash()), nullptr);
    }

    EXPECT_EQ(tree.getBestChain().tip()->getHeight(), block.getHeight());
    ++totalBlocks;
  }
}

INSTANTIATE_TEST_SUITE_P(AcceptBlocksRegression,
                         AcceptTest,
                         testing::ValuesIn(accept_test_cases));
